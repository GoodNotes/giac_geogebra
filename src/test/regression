#!/bin/sh
# Creates *.out files from *.in files or runs a regression test.
# @author Zoltan Kovacs <zoltan@geogebra.org>

MINIGIAC=../../build/install/minigiac/linux64/minigiac # FIXME, this is hardcoded

OVERWRITE=0
TIMEOUT=480
HEAVY=0
INFEASIBLE=0
REGRESSION=0
SILENT=0
FOLDER=.

log() {
 DATE=`date +%T`
 echo "$DATE $*"
 }

usage() {
 echo "$0 - creates .out files from .in files or runs a regression test."
 echo "Usage:"
 echo " $0 [options]"
 echo "  where options can be as follows (defaults in parentheses):"
 echo "   -r           run a regression test (if not specified, it creates the remaining .out files)"
 echo "   -f           overwrite existing .out files (on creation only)"
 echo "   -H           run heavy tests also"
 echo "   -I           run infeasible tests also"
 echo "   -s           be silent: do not exit with error code when there is regression"
 echo "   -t <number>  timeout: exit from a single test after the given number of seconds ($TIMEOUT)"
 echo "   -j           test the JNI version (make sure running task :giac-jni:testJni first)"
 echo "   -n           test the Node version (make sure running \"npm install\" first)"
 echo "   -T <folder>  run tests only in folder"
 echo "   -h           show this help"
 exit 0
 }

while getopts "tT:rfhHIsjn" OPT; do
 case $OPT in
  j)
   MINIGIAC=../../../giac-jni/src/test/minigiac
   ;;
  n)
   MINIGIAC=../../nodegiac
   ;;
  s)
   SILENT=1
   ;;
  r)
   REGRESSION=1
   ;;
  f)
   OVERWRITE=1
   ;;
  H)
   HEAVY=1
   ;;
  I)
   INFEASIBLE=1
   ;;
  t)
   TIMEOUT="$OPTARG"
   ;;
  T)
   FOLDER="$OPTARG"
   ;;
  h)
   usage
   ;;

 esac
done

export MINIGIAC # for the awk script below (intelligent diff)

# Put name of the filters into $@
shift $((OPTIND-1))

test -x $MINIGIAC || {
 echo "Cannot find $MINIGIAC"
 exit 2
 }

SAVEDIR=.

if [ "$REGRESSION" = 1 ]; then
 SAVEDIR=`date +%Y%m%d%H%M%S`
 mkdir -p $SAVEDIR
 echo 0 > $SAVEDIR/.good
 echo 0 > $SAVEDIR/.bad
 fi

find $FOLDER -name '*.in' | while read IN; do
 INDIRNAME=`dirname $IN`
 OUT="$INDIRNAME"/`basename $IN .in`.out
 if [ "$REGRESSION" = 1 -o "$OVERWRITE" = 1 -o ! -f $OUT ]; then
  IGNORE=0
  if [ "$INFEASIBLE" = 0 ]; then
   grep --silent ^$IN infeasible.txt && IGNORE=1
   fi
  if [ "$HEAVY" = 0 ]; then
   grep --silent ^$IN heavy.txt && IGNORE=1
   fi
  if [ "$IGNORE" = 0 ]; then
   DATE=`date +%T`
   log "Processing $IN"
   if [ "$REGRESSION" = 1 ]; then
    mkdir -p `dirname $SAVEDIR/$OUT`
    fi
   INFILE=`mktemp`
   test -r $INDIRNAME/.preamble && cat $INDIRNAME/.preamble >> $INFILE
   FILTER=...
   test -r "$INDIRNAME"/.filter && FILTER=`cat "$INDIRNAME"/.filter`
   export FILTER
   # This is extremely hacky. See https://www.gnu.org/software/gawk/manual/html_node/Gory-Details.html
   cat $IN | sed s/"&"/"\\\\&"/g | awk '{filter=ENVIRON["FILTER"]; sub(/\.\.\./, $0, filter); print filter}' >> $INFILE
   timeout $TIMEOUT $MINIGIAC -m < $INFILE > $SAVEDIR/$OUT 2> $SAVEDIR/.stderr
   rm $INFILE
   RETVAL=$?
   if [ $RETVAL != 0 ]; then
    cat $SAVEDIR/.stderr > /dev/stderr
    log "Process exited with error $RETVAL"
    fi
   if [ "$REGRESSION" = 1 ]; then
    mkdir -p `dirname $SAVEDIR/$OUT`
    fi
   if [ "$REGRESSION" = 1 ]; then
    TESTOK=1
    diff -u $OUT $SAVEDIR/$OUT > $SAVEDIR/$OUT.diff
    if [ -s $SAVEDIR/$OUT.diff ]; then
    # intelligent diff (via giac)
     diff $OUT $SAVEDIR/$OUT | awk '{
      if ($1=="<") { inline = $2; inres = substr($0,3+length($2)+1); }
      else if ($1==">") { outline = $2; outres = substr($0,3+length($2)+1);
       cascommand = "caseval(\\\"init geogebra\\\");\nsort(" inres ")==sort(" outres ")";
       giaccommand = ENVIRON["MINIGIAC"] " -m";
       system("/bin/echo -e \"" cascommand "\" > /tmp/giac.in");
       system(giaccommand " 2>&1 </tmp/giac.in >/tmp/giac.out");
       syscommand = "tail -1 /tmp/giac.out";
       syscommand | getline check;
       close(syscommand);
       if (index(check,"2<< true")==0) {
        print ed;
        print "< " inline " " inres;
        print "---";
        print "> " outline " " outres;
        }
       system("rm /tmp/giac.in /tmp/giac.out");
       }
      else if ($1!="---") { ed = $0; }
     }' > $SAVEDIR/$OUT-2.diff
     if [ -s $SAVEDIR/$OUT-2.diff ]; then
      BAD=`cat $SAVEDIR/.bad`
      BAD=$((BAD+1))
      echo $BAD > $SAVEDIR/.bad
      log "Regression found in $OUT:"
      cat $SAVEDIR/$OUT-2.diff
      TESTOK=0
      fi # regression found
     fi # intelligent diff
    if [ "$TESTOK" = 1 ]; then
     GOOD=`cat $SAVEDIR/.good`
     GOOD=$((GOOD+1))
     echo $GOOD > $SAVEDIR/.good
     rm $SAVEDIR/$OUT $SAVEDIR/$OUT.diff # cleaning up
     fi # test ok
    fi # regression test run
   fi # test should not be ignored
  fi
 done

log "All files have been processed"

if [ "$REGRESSION" = 1 ]; then
 BAD=`cat $SAVEDIR/.bad`
 GOOD=`cat $SAVEDIR/.good`
 log "Summary: $GOOD good and $BAD bad results"
 if [ "$BAD" != 0 -a "$SILENT" = 0 ]; then
  exit 1
  fi
 fi

exit 0
