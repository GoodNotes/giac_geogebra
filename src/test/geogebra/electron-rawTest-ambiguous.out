1>> caseval("init geogebra")
1<< "geogebra mode on"
2>> fractionalPart(x):=sign(x)*(abs(x)-floor(abs(x)))
2<<  (x)->sign(x)*(abs(x)-floor(abs(x)))
3>> is3dpoint(x):=when(size(x[1])==3 && subtype(x[1])==20,true,false)
3<<  (x)->when((((size(x[1]))==3)) && (((subtype(x[1]))==20)),true,false)
4>> xcoord(a):=when(type(a)==DOM_IDENT,xcoordsymb(a),when(a[0]=='pnt',when(is3dpoint(a),a[1][0],real(a[1])),when(a[0]=='=',coeff(a[1]-a[2],x,1),a[0])))
4<<  (a)->when(((type(a))==identifier),xcoordsymb(a),when(((a[0])=='pnt'),when(is3dpoint(a),(a[1])[0],real(a[1])),when(((a[0])=='='),coeff(a[1]-(a[2]),x,1),a[0])))
5>> ycoord(a):=when(type(a)==DOM_IDENT,ycoordsymb(a),when(a[0]=='pnt',when(is3dpoint(a),a[1][1],im(a[1])),when(a[0]=='=',coeff(a[1]-a[2],y,1),a[1])))
5<<  (a)->when(((type(a))==identifier),ycoordsymb(a),when(((a[0])=='pnt'),when(is3dpoint(a),(a[1])[1],im(a[1])),when(((a[0])=='='),coeff(a[1]-(a[2]),y,1),a[1])))
6>> zcoord(a):=when(type(a)==DOM_IDENT,zcoordsymb(a),when(a[0]=='pnt',when(is3dpoint(a),a[1][2],0),when(length(a)<3 && a[0] != '=',0,when(a[0]=='=',coeff(a[1]-a[2],z,1),a[2]))))
6<<  (a)->when(((type(a))==identifier),zcoordsymb(a),when(((a[0])=='pnt'),when(is3dpoint(a),(a[1])[2],0),when(((length(a))<3) && ((a[0])<>'='),0,when(((a[0])=='='),coeff(a[1]-(a[2]),z,1),a[2]))))
7>> degasin(x):=normal(asin(x)/pi*180)*unicode0176u
7<<  (x)->normal(asin(x)/pi*180)*unicode0176u
8>> degacos(x):=normal(acos(x)/pi*180)*unicode0176u
8<<  (x)->normal(acos(x)/pi*180)*unicode0176u
9>> degatan(x):=normal(atan(x)/pi*180)*unicode0176u
9<<  (x)->normal(atan(x)/pi*180)*unicode0176u
10>> degatan2(y,x):=normal(arg(x+i*y)/pi*180)*unicode0176u
10<<  (y,x)->normal(arg(x+ί*y)/pi*180)*unicode0176u
11>> ggbabs(x):=when(x[0]=='pnt' || (type(x)==DOM_LIST && subtype(x)==27),l2norm(x),abs(x))
11<<  (x)->when((((x[0])=='pnt')) || ((((type(x))==vector)) && (((subtype(x))==27))),l2norm(x),abs(x))
12>> ggb_is_zero(x):=when(x==0,true,when(type(x)=='DOM_LIST',max(flatten({x,0}))==min(flatten({x,0}))&&min(flatten({x,0}))==0,when(x[0]=='=',lhs(x)==0&&rhs(x)==0,false)))
12<<  (x)->when((x==0),true,when(((type(x))==vector),(((max(flatten({x,0})))==(min(flatten({x,0}))))) && (((min(flatten({x,0})))==0)),when(((x[0])=='='),(((lhs(x))==0)) && (((rhs(x))==0)),false)))
13>> caseval(regroup(evalfa(ggbsort(regroup(csolve((z)^(2)=(ggbtmpvark)*((ggbtmpvara)^(2)),z))))))
13<< {z=(-√(ggbtmpvara^2*ggbtmpvark)),z=(√(ggbtmpvara^2*ggbtmpvark))}
14>> caseval(regroup(evalfa(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))]))))))
14<< ggbvect(1,2)
15>> caseval(regroup(evalfa([[[ggbextremumfun:=(x)^(10)],[ggbextans:=extrema((x)^(10))],[ggbextvar:=when(size(lname(ggbextremumfun) intersect [x])==0,lname(ggbextremumfun)[0],x)]],map(ggbextans,it->point(it,normal(regroup(subst(ggbextremumfun,ggbextvar,it)))))][1])))
15<< {(0,0)}
16>> caseval(regroup(evalfa([[ggbintans:=0/0], [arg01720:=tan(x)], [vars := lname(arg01720)], [factored:=factors(arg01720)],[constant := 1],[variable := 1],[seq(when(!contains(lname(factored[j]),x),constant*=factored[j]^factored[j+1],variable*=factored[j]^factored[j+1]),j,0,length(factored)-1,2)],[ggbintans:=constant*integrate(variable,x,0,inf)],[ggbintans:=when(type(ggbintans)==DOM_LIST,ggbintans[size(ggbintans)-1],ggbintans)],[ggbintanssimplified:=simplify(ggbintans)],when(ggbintanssimplified==undef||length(""+ggbintans)<=length(""+ggbintanssimplified),regroup(ggbintans),ggbintanssimplified)][-1])))
16<< integrate(tan(x),x,0,+infinity)
17>> caseval(regroup(evalfa([[[ggbextremumfun:=((((x)^(3))-((x)^(2)))-(x))+(1)],[ggbextans:=extrema(((((x)^(3))-((x)^(2)))-(x))+(1))],[ggbextvar:=when(size(lname(ggbextremumfun) intersect [x])==0,lname(ggbextremumfun)[0],x)]],map(ggbextans,it->point(it,normal(regroup(subst(ggbextremumfun,ggbextvar,it)))))][1])))
17<< [pnt(pnt[(-9+32*i)/27,[536870912]]),pnt(pnt[1,[536870912]])]
18>> caseval(regroup(evalfa([[ggbnumans:=[[ggblimvans:=?],[ggblimvans:=limit((((tan(x))^(2))*((1)-(sin(x))))/(x),(1570796326/1000000000))],[ggblimvans:=when(ggblimvans==inf||ggblimvans==-inf||ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]],when(dim(lname(ggbnumans))==0||lname(ggbnumans)==[unicode0176u],evalf(ggbnumans,30),normal(evalf(regroup(ggbnumans),30)))][1])))
18<< 0.318309886343627006293367151662
19>> caseval(regroup(evalfa([[ggbintans:=0/0], [arg01786:=((((ggbtmpvart)^(4))+(ggbtmpvart))+(1))/((((ggbtmpvart)^(6))+((ggbtmpvart)^(3)))+(2))], [vars := lname(arg01786)], [factored:=factors(arg01786)],[constant := 1],[variable := 1],[seq(when(!contains(lname(factored[j]),ggbtmpvart),constant*=factored[j]^factored[j+1],variable*=factored[j]^factored[j+1]),j,0,length(factored)-1,2)],[ggbintans:=constant*integrate(variable,ggbtmpvart,1,inf)],[ggbintans:=when(type(ggbintans)==DOM_LIST,ggbintans[size(ggbintans)-1],ggbintans)],[ggbintanssimplified:=simplify(ggbintans)],when(ggbintanssimplified==undef||length(""+ggbintans)<=length(""+ggbintanssimplified),regroup(ggbintans),ggbintanssimplified)][-1])))
19<< integrate((ggbtmpvart^4+ggbtmpvart+1)/(ggbtmpvart^6+ggbtmpvart^3+2),ggbtmpvart,1,+infinity)
20>> caseval(regroup(evalfa(when(is_3dpoint(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))])))),ggbvect[xcoord(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))])))),ycoord(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))])))),zcoord(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))]))))],when((when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))]))))[0]=='pnt',ggbvect[xcoord(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))])))),ycoord(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))]))))],when(im(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))]))))==ggbvect[0,0],when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))]))),ggbvect[re(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))])))),im(when(is_3dpoint(point(1,2)),ggbvect[xcoord(point(1,2)),ycoord(point(1,2)),zcoord(point(1,2))],when((point(1,2))[0]=='pnt',ggbvect[xcoord(point(1,2)),ycoord(point(1,2))],when(im(point(1,2))==ggbvect[0,0],point(1,2),ggbvect[re(point(1,2)),im(point(1,2))])))+when(is_3dpoint(point(3,4)),ggbvect[xcoord(point(3,4)),ycoord(point(3,4)),zcoord(point(3,4))],when((point(3,4))[0]=='pnt',ggbvect[xcoord(point(3,4)),ycoord(point(3,4))],when(im(point(3,4))==ggbvect[0,0],point(3,4),ggbvect[re(point(3,4)),im(point(3,4))]))))]))))))
20<< ggbvect[4,6]
21>> caseval(regroup(evalfa(when(is_3dpoint(point((ggbtmpvark)+(1),(ggbtmpvark)+(1),(ggbtmpvark)+(2)))||is_3dpoint(point((ggbtmpvarp)+(4),(ggbtmpvarp)+(3))),ggbvect[xcoord(point((ggbtmpvarp)+(4),(ggbtmpvarp)+(3)))-xcoord(point((ggbtmpvark)+(1),(ggbtmpvark)+(1),(ggbtmpvark)+(2))),ycoord(point((ggbtmpvarp)+(4),(ggbtmpvarp)+(3)))-ycoord(point((ggbtmpvark)+(1),(ggbtmpvark)+(1),(ggbtmpvark)+(2))),zcoord(point((ggbtmpvarp)+(4),(ggbtmpvarp)+(3)))-zcoord(point((ggbtmpvark)+(1),(ggbtmpvark)+(1),(ggbtmpvark)+(2)))],when((point((ggbtmpvark)+(1),(ggbtmpvark)+(1),(ggbtmpvark)+(2)))[0]=='pnt',ggbvect[xcoord(point((ggbtmpvarp)+(4),(ggbtmpvarp)+(3)))-xcoord(point((ggbtmpvark)+(1),(ggbtmpvark)+(1),(ggbtmpvark)+(2))),ycoord(point((ggbtmpvarp)+(4),(ggbtmpvarp)+(3)))-ycoord(point((ggbtmpvark)+(1),(ggbtmpvark)+(1),(ggbtmpvark)+(2)))],ggbvect[point((ggbtmpvark)+(1),(ggbtmpvark)+(1),(ggbtmpvark)+(2)),point((ggbtmpvarp)+(4),(ggbtmpvarp)+(3))])))))
21<< ggbvect[-ggbtmpvark+ggbtmpvarp+3,-ggbtmpvark+ggbtmpvarp+2,-ggbtmpvark-2]
22>> caseval(regroup(evalfa(when(type((ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg))))==DOM_SYMBOLIC&&type(ggbtmpvarg)==DOM_SYMBOLIC&&(ggbtmpvarg)[0]!='of',(assume(ggbtmpvarg),solve((ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg))),x)) [size(assume(ggbtmpvarg),solve((ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg))),x))-1],when(type((ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg))))==DOM_IDENT&&type(ggbtmpvarg)==DOM_SYMBOLIC&&(ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg)))=='x',(assume(ggbtmpvarg),solve((ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg)))=0,x))[size(assume(ggbtmpvarg),solve((ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg)))=0,x))-1],when(size(ggbtmpvarg)==1,flatten1(ggbsort(normal([op(solve((ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg))),ggbtmpvarg))]))),ggbsort(normal([op(solve((ggbtmpvarc)^(2)=(((ggbtmpvara)^(2))+((ggbtmpvarb)^(2)))-((((2)*(ggbtmpvara))*(ggbtmpvarb))*(cos(ggbtmpvarg))),ggbtmpvarg))]))))))))
22<< {ggbtmpvarg=(-acos((ggbtmpvara^2+ggbtmpvarb^2-ggbtmpvarc^2)/(2*ggbtmpvara*ggbtmpvarb))+2*n_14*pi),ggbtmpvarg=(acos((ggbtmpvara^2+ggbtmpvarb^2-ggbtmpvarc^2)/(2*ggbtmpvara*ggbtmpvarb))+2*n_14*pi)}
23>> caseval(regroup(evalfa([[[ggbelarg0182:=(((x)^(3))+((x)*(y)))+(3)],[ggbelarg1182:=4]],when(type(ggbelarg0182)==DOM_LIST,(ggbelarg0182)[ggbelarg1182-1],when(ggbelarg1182>0,when(ggbelarg0182[0]=='pnt',?,(ggbelarg0182)[ggbelarg1182]),?))][1])))
23<< "GIAC_ERROR: at(ggbelarg0182,ggbelarg1182) 
 Error: Invalid dimension"
24>> caseval(regroup(evalfa([[[ggbelarg0169:={1, 2, 3}],[ggbelarg1169:=6]],when(type(ggbelarg0169)==DOM_LIST,(ggbelarg0169)[ggbelarg1169-1],when(ggbelarg1169>0,when(ggbelarg0169[0]=='pnt',?,(ggbelarg0169)[ggbelarg1169]),?))][1])))
24<< "GIAC_ERROR: Index outside range : 5, vector size is 3, syntax compatibility mode xcas
 Error: Invalid dimension"
