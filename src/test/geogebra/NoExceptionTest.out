1>> caseval("init geogebra")
1<< "geogebra mode on"
2>> ggbsort(x):=when(length(x)==0,{},when(type(x[0])==DOM_LIST,x,sort(x)))
2<<  (x)->when(((length(x))==0),{},when(((type(x[0]))==DOM_LIST),x,sort(x)))
3>> atan2(y,x):=arg(x+i*y)
3<<  (y,x)->arg(x+ί*y)
4>> sech(x):=1/cosh(x)
4<<  (x)->1/cosh(x)
5>> csch(x):=1/sinh(x)
5<<  (x)->1/sinh(x)
6>> fractionalPart(x):=sign(x)*(abs(x)-floor(abs(x)))
6<<  (x)->sign(x)*(abs(x)-floor(abs(x)))
7>> is3dpoint(x):=when(size(x[1])==3 && subtype(x[1])==20,true,false)
7<<  (x)->when((((size(x[1]))==3)) && (((subtype(x[1]))==20)),true,false)
8>> xcoord(a):=when(type(a)==DOM_IDENT,xcoordsymb(a),when(a[0]=='pnt',when(is3dpoint(a),a[1][0],real(a[1])),when(a[0]=='=',coeff(a[1]-a[2],x,1),a[0])))
8<<  (a)->when(((type(a))==DOM_IDENT),xcoordsymb(a),when(((a[0])=='pnt'),when(is3dpoint(a),(a[1])[0],real(a[1])),when(((a[0])=='='),coeff(a[1]-(a[2]),x,1),a[0])))
9>> ggbalt(x):=when(type(x)==DOM_IDENT,altsymb(x),when(x[0]=='pnt',when(is3dpoint(x),atan2(x[1][2],sqrt(x[1][0]^2+x[1][1]^2)),0),?))
9<<  (x)->when(((type(x))==DOM_IDENT),altsymb(x),when(((x[0])=='pnt'),when(is3dpoint(x),atan2((x[1])[2],sqrt(((x[1])[0])^2+((x[1])[1])^2)),0),?))
10>> ycoord(a):=when(type(a)==DOM_IDENT,ycoordsymb(a),when(a[0]=='pnt',when(is3dpoint(a),a[1][1],im(a[1])),when(a[0]=='=',coeff(a[1]-a[2],y,1),a[1])))
10<<  (a)->when(((type(a))==DOM_IDENT),ycoordsymb(a),when(((a[0])=='pnt'),when(is3dpoint(a),(a[1])[1],im(a[1])),when(((a[0])=='='),coeff(a[1]-(a[2]),y,1),a[1])))
11>> zcoord(a):=when(type(a)==DOM_IDENT,zcoordsymb(a),when(a[0]=='pnt',when(is3dpoint(a),a[1][2],0),when(length(a)<3 && a[0] != '=',0,when(a[0]=='=',coeff(a[1]-a[2],z,1),a[2]))))
11<<  (a)->when(((type(a))==DOM_IDENT),zcoordsymb(a),when(((a[0])=='pnt'),when(is3dpoint(a),(a[1])[2],0),when(((length(a))<3) && ((a[0])<>'='),0,when(((a[0])=='='),coeff(a[1]-(a[2]),z,1),a[2]))))
12>> degasin(x):=normal(asin(x)/pi*180)*unicode0176u
12<<  (x)->normal(asin(x)/pi*180)*unicode0176u
13>> degacos(x):=normal(acos(x)/pi*180)*unicode0176u
13<<  (x)->normal(acos(x)/pi*180)*unicode0176u
14>> degatan(x):=normal(atan(x)/pi*180)*unicode0176u
14<<  (x)->normal(atan(x)/pi*180)*unicode0176u
15>> degatan2(y,x):=normal(arg(x+i*y)/pi*180)*unicode0176u
15<<  (y,x)->normal(arg(x+ί*y)/pi*180)*unicode0176u
16>> ggbabs(x):=when(x[0]=='pnt' || (type(x)==DOM_LIST && subtype(x)==27),l2norm(x),abs(x))
16<<  (x)->when((((x[0])=='pnt')) || ((((type(x))==DOM_LIST)) && (((subtype(x))==27))),l2norm(x),abs(x))
17>> ggb_is_zero(x):=when(x==0,true,when(type(x)=='DOM_LIST',max(flatten({x,0}))==min(flatten({x,0}))&&min(flatten({x,0}))==0,when(x[0]=='=',lhs(x)==0&&rhs(x)==0,false)))
17<<  (x)->when((x==0),true,when(((type(x))==DOM_LIST),(((max(flatten({x,0})))==(min(flatten({x,0}))))) && (((min(flatten({x,0})))==0)),when(((x[0])=='='),(((lhs(x))==0)) && (((rhs(x))==0)),false)))
18>> nextprime(-((170000000000000/100000000000000)))
18<< 2
19>> regroup(diff(sin(x),x,1))
19<< cos(x)
20>> regroup(diff(cos(x),x,1))
20<< -sin(x)
21>> [[[ggbdivarg0:=(x)^(2)],[ggbdivarg1:=(x)+(1)]],if type(ggbdivarg0)==DOM_INT && type(ggbdivarg1)==DOM_INT then iquo(ggbdivarg0,ggbdivarg1) else quo(ggbdivarg0,ggbdivarg1,x) fi][1]
21<< x-1
22>> [[[ggbmodarg0:=(x)^(2)],[ggbmodarg1:=(x)+(1)]],if type(ggbmodarg0)==DOM_INT && type(ggbmodarg1)==DOM_INT then irem(ggbmodarg0,ggbmodarg1) else rem(ggbmodarg0,ggbmodarg1,x) fi][1]
22<< 1
23>> simplify(regroup(sin(x)))
23<< sin(x)
24>> regroup(integrate(sin(x),x))
24<< -cos(x)+c_1
25>> [[[ggbdivarg0:=((x)^(4))+(4)],[ggbdivarg1:=(x)^(2)]],if type(ggbdivarg0)==DOM_INT && type(ggbdivarg1)==DOM_INT then iquo(ggbdivarg0,ggbdivarg1) else quo(ggbdivarg0,ggbdivarg1,x) fi][1]
25<< x^2
26>> [[[ggbmodarg0:=((x)^(4))+(4)],[ggbmodarg1:=(x)^(2)]],if type(ggbmodarg0)==DOM_INT && type(ggbmodarg1)==DOM_INT then irem(ggbmodarg0,ggbmodarg1) else rem(ggbmodarg0,ggbmodarg1,x) fi][1]
26<< 4
27>> when(is_polynomial(sin(x),x),coeff(sin(x),x),{})
27<< {}
28>> [[ggbexpandarg:=(x)^(2)],when(contains(ggbexpandarg,i),normal(real(ggbexpandarg)) + normal(i*im(ggbexpandarg)), normal(ggbexpandarg))][1]
28<< x^2
29>> [with_sqrt(0),[ggbfacans:=(x)^(2)],[if type(ggbfacans)==DOM_INT then ggbfacans:=ifactor(ggbfacans); else ggbfacans:=factor(ggbfacans,x); fi],with_sqrt(1),ggbfacans][4]
29<< x^2
30>> [[ggbnumans:=[[ggblimvans:=?],[ggblimvans:=limit(sin(x),x,17,1)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]],when(dim(lname(ggbnumans))==0 || lname(ggbnumans)==[unicode0176u],evalf(ggbnumans,50),evalf(regroup(normal(ggbnumans)),50))][1]
30<< -0.96139749187955685726163694486915609849206725405894
31>> [[ggbnumans:=[[ggblimvans:=?],[ggblimvans:=limit(sin(x),x,17,-1)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]],when(dim(lname(ggbnumans))==0 || lname(ggbnumans)==[unicode0176u],evalf(ggbnumans,50),evalf(regroup(normal(ggbnumans)),50))][1]
31<< -0.96139749187955685726163694486915609849206725405894
32>> [with_sqrt(1),[ggbfacans:=((x)^(4))-(2)],[if type(ggbfacans)==DOM_INT then ggbfacans:=ifactor(ggbfacans); else ggbfacans:=factor(ggbfacans,x); fi],ggbfacans][3]
32<< x^4-2
33>> [[[ggbtrigarg:=sin((x)+(y))], [ggbsin:=tcollectsin(normal(ggbtrigarg))], [ggbcos:=tcollect(normal(ggbtrigarg))], [ggbtan:=tcollect(normal(tan2sincos(ggbtrigarg)))], [ggbsinlen:=length(""+ggbsin)],[ggbcoslen:=length(""+ggbcos)],[ggbtanlen:=length(""+ggbtan)]],when(ggbcoslen<=ggbsinlen && ggbcoslen<=ggbtanlen,ggbcos,when(ggbsinlen<=ggbtanlen,ggbsin,ggbtan))][1]
33<< sin(x+y)
34>> [[[ggbtrigarg0:=sin((x)+(y))],[ggbtrigarg1:=sin(x)]],when(ggbtrigarg1[0]=='sin',tcollectsin(normal(ggbtrigarg0)),when(ggbtrigarg1[0]=='tan',tcollect(normal(tan2sincos(ggbtrigarg0))),tcollect(normal(ggbtrigarg0))))][1]
34<< sin(x+y)
35>> 1
35<< 1
36>> [[ff:=""],[aa:=eliminate([1+v5*v4+v5*v3+v5^2*v4*v3],revlist([v5]))],[bb:=size(aa)],[for ii from 0 to bb-1 do ff+=("["+(ii+1)+"]: [1]:  unicode95uunicode91u1]=1");cc:=factors(aa[ii]);dd:=size(cc);for jj from 0 to dd-1 by 2 do ff+=("  unicode95uunicode91u"+(jj/2+2)+"]="+cc[jj]); od; ff+=(" [2]: "+cc[1]);for kk from 1 to dd-1 by 2 do ff+=(","+cc[kk]);od;od],[if(ff=="") begin ff:=[0] end],ff][5]
36<< {0}
37>> when(is_polynomial(sin(x),x),coeff(sin(x),x),{})
37<< {}
38>> regroup(diff(sin(x),x,42))
38<< -sin(x)
39>> [[ggbpparg0:=(230000000000000/100000000000000)],if (ggbpparg0 > 2) then prevprime(ggbpparg0) else 0/0 fi][1]
39<< ERROR: prevprime Error: Bad Argument Type
40>> [[ggblimvans:=?],[ggblimvans:=limit(sin(x),x,inf)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]
40<< bounded_function(2)
41>> [[ggblimvans:=?],[ggblimvans:=limit(sin(x),x,-inf)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]
41<< bounded_function(4)
42>> [[ggblimvans:=?],[ggblimvans:=limit(cos(x),x,inf)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]
42<< bounded_function(6)
43>> [[ggblimvans:=?],[ggblimvans:=limit(cos(x),x,-inf)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]
43<< bounded_function(8)
44>> simplify(regroup((1)/(sin(x))))
44<< 1/sin(x)
45>> when ( type(simplify(regroup((1)/(sin(x))))=0) == DOM_SYMBOLIC && type(x) == DOM_SYMBOLIC , (assume(x),solve(simplify(regroup((1)/(sin(x))))=0,x))[size(assume(x),solve(simplify(regroup((1)/(sin(x))))=0,x))-1] , when ( type(simplify(regroup((1)/(sin(x))))=0) == DOM_IDENT && type(x) == DOM_SYMBOLIC && simplify(regroup((1)/(sin(x))))=0 == 'x', (assume(x),solve(simplify(regroup((1)/(sin(x))))=0=0,x))[size(assume(x),solve(simplify(regroup((1)/(sin(x))))=0=0,x))-1] ,when ( size(x) == 1,flatten1(ggbsort(normal([op(solve(simplify(regroup((1)/(sin(x))))=0,x))]))),ggbsort(normal([op(solve(simplify(regroup((1)/(sin(x))))=0,x))])) ) ) )
45<< []
46>> when((-(x))[0]=='=', when (size(lname(-(x)) intersect [x]) == 0 && size(lname(-(x)) intersect [y]) == 1 && size(lname(-(x)) minus [y]) > 0,normal(map(desolve(-(x),x,y),x->y=x)[0]),normal(map(desolve(-(x)),x->y=x)[0])),normal(map(desolve(y'=-(x)),x->y=x)[0]))
46<< y=(c_0-1/2*x^2)
47>> normal(y=when(type(point(1,1))==DOM_LIST,desolve([-(x),y(xcoord(point(1,1)[0]))=ycoord(point(1,1)[0]),y(xcoord(point(1,1)[1]))=ycoord(point(1,1)[1])],x,y),desolve(when((-(x))[0]=='=',-(x),y'=-(x)),x,y,point(1,1)))[0])
47<< y=(-1/2*x^2+3/2)
48>> when(is_polynomial(sin(x),x),coeff(sin(x),x),{})
48<< {}
49>> [[[ggbtrigarg:=sin((x)+(y))], [ggbsin:=trigsin(ggbtrigarg)], [ggbcos:=trigcos(ggbtrigarg)], [ggbtan:=trigtan(ggbtrigarg)], [ggbsinlen:=length(""+ggbsin)],[ggbcoslen:=length(""+ggbcos)],[ggbtanlen:=length(""+ggbtan)]],when(ggbsinlen<=ggbcoslen && ggbsinlen<=ggbtanlen,ggbsin,when(ggbcoslen<=ggbtanlen,ggbcos,ggbtan))][1]
49<< sin(x+y)
50>> lcm(denom((1)/((x)-(1))),denom((1)/(((x)^(2))-(1))))
50<< x^2-1
51>> partfrac(sin(x),x)
51<< sin(x)
52>> tan2sincos(trigexpand(sin((x)+(y))))
52<< sin(x)*cos(y)+cos(x)*sin(y)
53>> [[ggbtrigarg0:=sin((x)+(y))],when((sin(x))[0]=='tan', trigexpand(ggbtrigarg0),tan2sincos(trigexpand(ggbtrigarg0)))][1]
53<< sin(x)*cos(y)+cos(x)*sin(y)
54>> regroup(diff(sin(x),x,41))
54<< cos(x)
55>> regroup(diff(sin(x),x,45))
55<< cos(x)
56>> regroup(diff(sin(x),x,0))
56<< sin(x)
57>> normal(y=when(type(point(?,?))==DOM_LIST,desolve([-(x),y(xcoord(point(?,?)[0]))=ycoord(point(?,?)[0]),y(xcoord(point(?,?)[1]))=ycoord(point(?,?)[1])],x,y),desolve(when((-(x))[0]=='=',-(x),y'=-(x)),x,y,point(?,?)))[0])
57<< ERROR: Index outside range : 0, vector size is 0, syntax compatibility mode xcas
 Error: Invalid dimension
58>> [[ggbnumans:=[[ggbfacans:=(x)^(2)],[if type(ggbfacans)==DOM_INT then calc_mode(0); ggbfacans:=ifactors(ggbfacans); calc_mode(1); else ggbfacans:=factors(ggbfacans); fi],matrix(dim(ggbfacans)/2,2,ggbfacans)][2]],when(dim(lname(ggbnumans))==0 || count_eq(unicode0176u,lname(ggbnumans))>0,evalf(ggbnumans),evalf(regroup(normal(ggbnumans))))][1]
58<< {{x,2.0}}
59>> regroup(diff(sin(x),x,1))
59<< cos(x)
60>> regroup(diff(cos(x),x,1))
60<< -sin(x)
61>> regroup(integrate(sin(x),x))
61<< -cos(x)+c_2
62>> when(is_polynomial(sin(x),x),coeff(sin(x),x),{})
62<< {}
63>> [[[ggbtrigarg:=sin((x)+(y))], [ggbsin:=tcollectsin(normal(ggbtrigarg))], [ggbcos:=tcollect(normal(ggbtrigarg))], [ggbtan:=tcollect(normal(tan2sincos(ggbtrigarg)))], [ggbsinlen:=length(""+ggbsin)],[ggbcoslen:=length(""+ggbcos)],[ggbtanlen:=length(""+ggbtan)]],when(ggbcoslen<=ggbsinlen && ggbcoslen<=ggbtanlen,ggbcos,when(ggbsinlen<=ggbtanlen,ggbsin,ggbtan))][1]
63<< sin(x+y)
64>> [[[ggbtrigarg0:=sin((x)+(y))],[ggbtrigarg1:=sin(x)]],when(ggbtrigarg1[0]=='sin',tcollectsin(normal(ggbtrigarg0)),when(ggbtrigarg1[0]=='tan',tcollect(normal(tan2sincos(ggbtrigarg0))),tcollect(normal(ggbtrigarg0))))][1]
64<< sin(x+y)
65>> 1
65<< 1
66>> [[ff:=""],[aa:=eliminate([1+v10*v9+v10*v8+v10^2*v9*v8],revlist([v10]))],[bb:=size(aa)],[for ii from 0 to bb-1 do ff+=("["+(ii+1)+"]: [1]:  unicode95uunicode91u1]=1");cc:=factors(aa[ii]);dd:=size(cc);for jj from 0 to dd-1 by 2 do ff+=("  unicode95uunicode91u"+(jj/2+2)+"]="+cc[jj]); od; ff+=(" [2]: "+cc[1]);for kk from 1 to dd-1 by 2 do ff+=(","+cc[kk]);od;od],[if(ff=="") begin ff:=[0] end],ff][5]
66<< {0}
67>> regroup(diff(sin(x),x,0))
67<< sin(x)
68>> when((-(x))[0]=='=', when (size(lname(-(x)) intersect [x]) == 0 && size(lname(-(x)) intersect [y]) == 1 && size(lname(-(x)) minus [y]) > 0,normal(map(desolve(-(x),x,y),x->y=x)[0]),normal(map(desolve(-(x)),x->y=x)[0])),normal(map(desolve(y'=-(x)),x->y=x)[0]))
68<< y=(c_0-1/2*x^2)
69>> normal(y=when(type(point(?,?))==DOM_LIST,desolve([-(x),y(xcoord(point(?,?)[0]))=ycoord(point(?,?)[0]),y(xcoord(point(?,?)[1]))=ycoord(point(?,?)[1])],x,y),desolve(when((-(x))[0]=='=',-(x),y'=-(x)),x,y,point(?,?)))[0])
69<< ERROR: Index outside range : 0, vector size is 0, syntax compatibility mode xcas
 Error: Invalid dimension
70>> when(is_polynomial(sin(x),x),coeff(sin(x),x),{})
70<< {}
71>> tan2sincos(trigexpand(sin((x)+(y))))
71<< sin(x)*cos(y)+cos(x)*sin(y)
72>> [[ggbtrigarg0:=sin((x)+(y))],when((sin(x))[0]=='tan', trigexpand(ggbtrigarg0),tan2sincos(trigexpand(ggbtrigarg0)))][1]
72<< sin(x)*cos(y)+cos(x)*sin(y)
73>> when(is_polynomial(sin(x),x),coeff(sin(x),x),{})
73<< {}
74>> [[ggbnumans:=[[ggblimvans:=?],[ggblimvans:=limit(sin(x),x,17)], [ggblimvans:=when(ggblimvans==inf || ggblimvans==-inf || ggblimvans==undef,ggblimvans,regroup(ggblimvans))],ggblimvans][3]],when(dim(lname(ggbnumans))==0 || lname(ggbnumans)==[unicode0176u],evalf(ggbnumans,50),evalf(regroup(normal(ggbnumans)),50))][1]
74<< -0.96139749187955685726163694486915609849206725405894
75>> when(is_polynomial(sin(x),x),coeff(sin(x),x),{})
75<< {}
76>> normal(regroup(-diff(((x)^(2))+((y)^(2)),x)/diff(((x)^(2))+((y)^(2)),y)))
76<< -x/y
